meta {
  name: generate a invoice
  type: http
  seq: 2
}

post {
  url: {{NODE3_RPC_URL}}/invoice
  body: json
  auth: none
}

headers {
  Content-Type: application/json
  Accept: application/json
}

script:pre-request {
  // generate random hash
  function generateRandomHash() {
    let hash = '0x';
    for (let i = 0; i < 64; i++) {
        hash += Math.floor(Math.random() * 16).toString(16);
    }
    return hash;
  }
  const payment_hash = generateRandomHash();
  bru.setVar("payment_hash", payment_hash);
}

body:json {
    {
        "request": {
            "NewInvoice": {
                "amount": 100,
                "currency": "Ckb",
                "description": "test invoice",
                "expiry": 3600,
                "payment_hash": "{{payment_hash}}",
                "final_cltv": 40
            }
        }
    }
}

assert {
  res.status: eq 200
}

