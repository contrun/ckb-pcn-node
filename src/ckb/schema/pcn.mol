import blockchain;

array Signature [byte; 64];
array PubNonce [byte; 66]; // PubNonce used by musig2 crate.
array Pubkey [byte; 33];
vector SignatureVec <Signature>;

table OpenChannel {
    chain_hash:                  Byte32,
    channel_id:                  Byte32,
    funding_type_script:         ScriptOpt,
    funding_amount:              Uint128,
    funding_fee_rate:            Uint64,
    commitment_fee_rate:         Uint64,
    max_tlc_value_in_flight:     Uint128,
    max_accept_tlcs:             Uint64,
    min_tlc_value:               Uint128,
    to_self_delay:               Uint64,
    funding_pubkey:              Pubkey,
    revocation_basepoint:        Pubkey,
    payment_basepoint:           Pubkey,
    delayed_payment_basepoint:   Pubkey,
    tlc_basepoint:               Pubkey,
    first_per_commitment_point:  Pubkey,
    second_per_commitment_point: Pubkey,
    next_local_nonce:            PubNonce,
    channel_flags:               byte,
}

table AcceptChannel {
    channel_id:                  Byte32,
    funding_amount:              Uint128,
    max_tlc_value_in_flight:     Uint128,
    max_accept_tlcs:             Uint64,
    min_tlc_value:               Uint128,
    to_self_delay:               Uint64,
    funding_pubkey:              Pubkey,
    revocation_basepoint:        Pubkey,
    payment_basepoint:           Pubkey,
    delayed_payment_basepoint:   Pubkey,
    tlc_basepoint:               Pubkey,
    first_per_commitment_point:  Pubkey,
    second_per_commitment_point: Pubkey,
    next_local_nonce:            PubNonce,
}

table CommitmentSigned {
    channel_id:     Byte32,
	partial_signature: Byte32,
    next_local_nonce:  PubNonce,
}

table TxSignatures {
    channel_id: Byte32,
    tx_hash:    Byte32,
    witnesses:  BytesVec,
}

table ChannelReady {
    channel_id: Byte32,
}

table TxUpdate {
    channel_id: Byte32,
    tx:         Transaction,
}

table TxComplete {
    channel_id: Byte32,
}

table TxAbort {
    channel_id: Byte32,
    message:    Bytes,
}

table TxInitRBF {
    channel_id: Byte32,
    fee_rate:   Uint64,
}

table TxAckRBF {
    channel_id: Byte32,
}

table Shutdown {
    channel_id: Byte32,
    close_script: Script,
}

table ClosingSigned {
    channel_id: Byte32,
    fee:        Uint64,
    signature:  Signature,
}

table AddTlc {
    channel_id:     Byte32,
    tlc_id:         Uint64,
    amount:         Uint128,
    payment_hash:   Byte32,
    expiry:         Uint64,
}

table TlcsSigned {
    channel_id:     Byte32,
    signature:      Signature,
    tlc_signatures: SignatureVec,
}

table RevokeAndAck {
    channel_id:                 Byte32,
    per_commitment_secret:      Byte32,
    next_per_commitment_point:  Pubkey,
}

struct RemoveTlcFulfill {
    payment_preimage:   Byte32,
}

struct RemoveTlcFail {
    error_code:         Uint32,
}

union RemoveTlcReason {
    RemoveTlcFulfill,
    RemoveTlcFail,
}

table RemoveTlc {
    channel_id:         Byte32,
    tlc_id:             Uint64,
    reason:             RemoveTlcReason,
}

table TestMessage {
    bytes: Bytes,
}

union PCNMessage {
    TestMessage,
    OpenChannel,
    AcceptChannel,
    CommitmentSigned,
    TxSignatures,
    ChannelReady,
    TxUpdate,
    TxComplete,
    TxAbort,
    TxInitRBF,
    TxAckRBF,
    Shutdown,
    ClosingSigned,
    AddTlc,
    TlcsSigned,
    RevokeAndAck,
    RemoveTlc,
}
